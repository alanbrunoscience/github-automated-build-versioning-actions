name: CI

on:
  push:
    branches:
      - master

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          #Fetch all commits
          fetch-depth: 0

      - name: Semantic versioning
        id: versioning
        uses: paulhatch/semantic-version@v4.0.2
        with:
          branch: master
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE:"
          minor_pattern: "feat:"
          patch_pattern: "fix:"
          format: "${major}.${minor}.${patch}-prerelease${increment}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Split string (Python)
        run: |
          import os
          nameRepo = "${{ github.repository }}"
          nameSplitRepo = nameRepo.split("/")
          env_file = os.getenv('GITHUB_ENV')
          with open(env_file, "a") as myfile:
            myfile.write("GITHUB_REPO_OWNER=" + nameSplitRepo[0].lower() + "\n")
            myfile.write("GITHUB_REPO_NAME=" + nameSplitRepo[1].lower())
        shell: python
     
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          push: false
          tags: ghcr.io/${{ env.GITHUB_REPO_OWNER }}/${{ env.GITHUB_REPO_NAME }}:latest, ghcr.io/${{ env.GITHUB_REPO_OWNER }}/${{ env.GITHUB_REPO_NAME }}:${{ steps.versioning.outputs.version }}

      - name: Create Release
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          release_name: ${{ steps.versioning.outputs.version }}
          prerelease: true




        


      
